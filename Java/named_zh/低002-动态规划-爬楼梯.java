/*****
爬楼梯

假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

注意：给定 n 是一个正整数。

示例 1：

输入： 2
输出： 2
解释： 有两种方法可以爬到楼顶。
1.  1 阶 + 1 阶
2.  2 阶
示例 2：

输入： 3
输出： 3
解释： 有三种方法可以爬到楼顶。
1.  1 阶 + 1 阶 + 1 阶
2.  1 阶 + 2 阶
3.  2 阶 + 1 阶


#####实动态规划解题的主要思想就是找出递推式，然后利用子问题的解来求最后的最优解
**/
class Solution {
    public int climbStairs(int n) {
        if(n==1){
            return 1;
        }else if(n==2){
            return 2;
        }else{
            int s1 = 1;//dp[i-1]
            int s2 = 2;//dp[i]
            int si = 0;//dp[i+1]
            for(int i=3;i<=n;i++){
                si= s1+s2;
                s1=s2;
                s2=si;
            }
            return si;
        }
    }
}